{"version":3,"sources":["components/Header/Header.jsx","components/Main/CardsField/Card/FavoriteIcon/FavoriteIcon.jsx","components/Main/CardsField/Card/Card.jsx","components/Main/CardsField/CardsField.jsx","components/Main/Filters/Filters.jsx","components/Main/Main.jsx","App.js","index.js"],"names":["Header","FavoriteIcon","returnMark","isFavorite","className","onClick","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Card","data","returnFavorite","style","backgroundImage","image","day","moment","date","renderDay","marked","id","name","CardsField","cards","chosenCity","chosenMonth","getMonthFromDate","isOnlyFavorites","useState","localStorage","favorites","firstFavorites","Map","forEach","card","JSON","stringify","getFirstFavorites","setFavorites","useEffect","idCard","mark","newFavorites","parse","cardItems","city","month","push","renderCards","Filters","setChosenCity","setChosenMonth","setIsOnlyFavorites","cities","setCities","months","setMonths","Set","item","add","renderOptions","dataset","options","htmlFor","value","onChange","e","target","type","Main","monthsMap","1","2","3","4","5","6","7","8","9","10","11","12","setData","fetching","setFetching","getData","monthNumber","fetch","process","then","response","json","renderFetchingData","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0c272a0.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const Header = () => (\r\n  <header>\r\n    <h1> Event Listing </h1>\r\n  </header>\r\n);\r\n","import React, { useState } from \"react\";\r\nimport \"./FavoriteIcon.css\";\r\n\r\nexport const FavoriteIcon = ({ returnMark, isFavorite }) => {\r\n  const switchMark = () => {\r\n    if (isFavorite) returnMark(false);\r\n    else returnMark(true);\r\n  };\r\n\r\n  return (\r\n    <svg\r\n      className=\"favoriteIcon\"\r\n      onClick={switchMark}\r\n      width=\"16\"\r\n      height=\"20\"\r\n      viewBox=\"0 0 16 20\"\r\n      fill={isFavorite ? \"#ffffff\" : \"none\"}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"M15 19L8 14L1 19V3C1 2.46957 1.21071 1.96086 1.58579 1.58579C1.96086 1.21071 2.46957 1 3 1H13C13.5304 1 14.0391 1.21071 14.4142 1.58579C14.7893 1.96086 15 2.46957 15 3V19Z\"\r\n        stroke=\"white\"\r\n        strokeWidth=\"2\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n","import moment from \"moment\";\r\nimport React from \"react\";\r\nimport \"./Card.css\";\r\nimport { FavoriteIcon } from \"./FavoriteIcon/FavoriteIcon\";\r\n\r\nexport const Card = ({ data, isFavorite, returnFavorite }) => {\r\n  const renderDay = () => {\r\n    let day = moment(data.date, \"DD.MM.YYYY\").date();\r\n    if (day < 10) day = \"0\" + day;\r\n    return day;\r\n  };\r\n\r\n  const returnMark = (marked) => returnFavorite(data.id, marked);\r\n\r\n  return (\r\n    <div className=\"card\" style={{ backgroundImage: `url(${data.image})` }}>\r\n      <div className=\"cardDay\">\r\n        <span className=\"cardDayText\"> {renderDay()} </span>\r\n      </div>\r\n      <FavoriteIcon returnMark={returnMark} isFavorite={isFavorite} />\r\n      <h1 className=\"cardName\"> {data.name} </h1>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { first } from \"strip-comments\";\r\nimport { Card } from \"./Card/Card\";\r\nimport \"./CardsField.css\";\r\n\r\nexport const CardsField = ({\r\n  cards,\r\n  chosenCity,\r\n  chosenMonth,\r\n  getMonthFromDate,\r\n  isOnlyFavorites,\r\n}) => {\r\n  const getFirstFavorites = () => {\r\n    if (!localStorage.favorites) {\r\n      const firstFavorites = new Map();\r\n      cards.forEach((card) => {\r\n        firstFavorites[card.id] = false;\r\n      });\r\n      return JSON.stringify(firstFavorites);\r\n    }\r\n    return localStorage.favorites;\r\n  };\r\n\r\n  const [favorites, setFavorites] = useState(getFirstFavorites());\r\n\r\n  useEffect(() => {\r\n    localStorage.favorites = favorites;\r\n  }, [favorites]);\r\n\r\n  const returnFavorite = (idCard, mark) => {\r\n    const newFavorites = JSON.parse(favorites);\r\n    newFavorites[idCard] = mark;\r\n    setFavorites(JSON.stringify(newFavorites));\r\n  };\r\n\r\n  const renderCards = () => {\r\n    if (!cards) return;\r\n    const cardItems = [];\r\n    cards.forEach((card) => {\r\n      const city = card.city;\r\n      const month = getMonthFromDate(card.date);\r\n      if (\r\n        (chosenCity === \"All\" || city === chosenCity) &&\r\n        (chosenMonth === \"All\" || month === chosenMonth) &&\r\n        (!isOnlyFavorites || JSON.parse(favorites)[card.id] === true)\r\n      )\r\n        cardItems.push(\r\n          <Card\r\n            key={card.id}\r\n            data={card}\r\n            isFavorite={JSON.parse(favorites)[card.id]}\r\n            returnFavorite={returnFavorite}\r\n          />\r\n        );\r\n    });\r\n    return cardItems;\r\n  };\r\n\r\n  return <div id=\"cardsField\">{renderCards()}</div>;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Filters.css\";\r\n\r\nexport const Filters = ({\r\n  data,\r\n  chosenCity,\r\n  setChosenCity,\r\n  chosenMonth,\r\n  setChosenMonth,\r\n  isOnlyFavorites,\r\n  setIsOnlyFavorites,\r\n  getMonthFromDate,\r\n}) => {\r\n  const [cities, setCities] = useState(null);\r\n  const [months, setMonths] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!data) return;\r\n    const cities = new Set([\"All\"]);\r\n    const months = new Set([\"All\"]);\r\n    data.forEach((item) => {\r\n      cities.add(item.city);\r\n      months.add(getMonthFromDate(item.date));\r\n    });\r\n    setCities(cities);\r\n    setMonths(months);\r\n  }, [data]);\r\n\r\n  const renderOptions = (dataset) => {\r\n    if (!dataset) return;\r\n    const options = [];\r\n    dataset.forEach((item) => {\r\n      options.push(<option key={item}> {item} </option>);\r\n    });\r\n    return options;\r\n  };\r\n\r\n  return (\r\n    <div className=\"filters\">\r\n      <label htmlFor=\"cityFilter\">City:</label>\r\n      <select\r\n        id=\"cityFilter\"\r\n        className=\"filter\"\r\n        value={chosenCity}\r\n        onChange={(e) => setChosenCity(e.target.value)}\r\n      >\r\n        {renderOptions(cities)}\r\n      </select>\r\n\r\n      <label htmlFor=\"monthFilter\">Month:</label>\r\n      <select\r\n        id=\"monthFilter\"\r\n        className=\"filter\"\r\n        value={chosenMonth}\r\n        onChange={(e) => setChosenMonth(e.target.value)}\r\n      >\r\n        {renderOptions(months)}\r\n      </select>\r\n\r\n      <span id=\"wrapper\">\r\n        <label htmlFor=\"favoriteFilter\">Only favorites:</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          id=\"favoriteFilter\"\r\n          value={isOnlyFavorites}\r\n          onChange={(e) => {\r\n            const value = e.target.value === \"false\" ? true : false;\r\n            setIsOnlyFavorites(value);\r\n          }}\r\n        />\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n","import moment from \"moment\";\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport { CardsField } from \"./CardsField/CardsField\";\r\nimport { Filters } from \"./Filters/Filters\";\r\n\r\nexport const Main = () => {\r\n  const monthsMap = {\r\n    1: \"January\",\r\n    2: \"February\",\r\n    3: \"March\",\r\n    4: \"April\",\r\n    5: \"May\",\r\n    6: \"June\",\r\n    7: \"July\",\r\n    8: \"August\",\r\n    9: \"September\",\r\n    10: \"October\",\r\n    11: \"November\",\r\n    12: \"December\",\r\n  };\r\n\r\n  const [data, setData] = useState(null);\r\n  const [chosenCity, setChosenCity] = useState(null);\r\n  const [chosenMonth, setChosenMonth] = useState(null);\r\n  const [isOnlyFavorites, setIsOnlyFavorites] = useState(false);\r\n  const [fetching, setFetching] = useState(true);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getMonthFromDate = (date) => {\r\n    const monthNumber = moment(date, \"DD.MM.YYYY\").month() + 1;\r\n    return monthsMap[monthNumber];\r\n  };\r\n\r\n  const getData = () => {\r\n    fetch(process.env.REACT_APP_DATA_SOURCE)\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        setData(json);\r\n        setChosenCity(\"All\");\r\n        setChosenMonth(\"All\");\r\n      })\r\n      .then(() => setFetching(false));\r\n  };\r\n\r\n  const renderFetchingData = () => {\r\n    if (!fetching)\r\n      return (\r\n        <Fragment>\r\n          <Filters\r\n            data={data}\r\n            chosenCity={chosenCity}\r\n            setChosenCity={setChosenCity}\r\n            chosenMonth={chosenMonth}\r\n            setChosenMonth={setChosenMonth}\r\n            isOnlyFavorites={isOnlyFavorites}\r\n            setIsOnlyFavorites={setIsOnlyFavorites}\r\n            getMonthFromDate={getMonthFromDate}\r\n          />\r\n          <CardsField\r\n            cards={data}\r\n            chosenCity={chosenCity}\r\n            chosenMonth={chosenMonth}\r\n            isOnlyFavorites={isOnlyFavorites}\r\n            getMonthFromDate={getMonthFromDate}\r\n          />\r\n        </Fragment>\r\n      );\r\n  };\r\n\r\n  return <main>{renderFetchingData()}</main>;\r\n};\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Header } from \"./components/Header/Header\";\nimport { Main } from \"./components/Main/Main\";\n\nconst App = () => {\n  return (\n    <div id=\"container\">\n      <Header />\n      <Main />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}